#!/bin/bash

# {{ ansible_managed }}

# This script creates for all the participants a vm in Azure, creates a project/inventory/credentials/job template and runs the ensure-cis-compliance playbook

# requires tower-cli and sshpass to be installed
# on Fedora:
# yum install python3-ansible-tower-cli sshpass
set -x

tower={{ hostvars['tower1']['ansible_host'] }}
url=https://$tower

credentials="-p {{ admin_password }} -u admin -h $url --insecure"

NUMBER_OF_PARTICIPANTS={{ nr_of_participants }}

# Spin up virtual machines. One for each participant
job_ids=()
for (( i=1; i<=$NUMBER_OF_PARTICIPANTS; i++)); do
 tower-cli job launch -J create_azure_vm_$i -e admin_user=wsuser$i -e vm_name=vmforuser$i -e admin_password=MyPassword$i $credentials
 job_id=`tower-cli job list -a $credentials | tail -2 | head -1 | awk '{print $1}'`
 job_ids+=(${job_id})
done

echo "Waiting for all running jobs to be finished"
while [[ $(tower-cli job list -a $credentials | grep running | wc -l) > 0 ]]; do
 sleep 10
done

# grep IP for each virtual machine
ips=()
for (( i=1; i<=$NUMBER_OF_PARTICIPANTS; i++)); do
 job_id=${job_ids[$i-1]}

 rm -f job_${job_id}.txt
 #for each job, get ip and put in array
 curl -O -k -J -L --basic -u 'admin:{{ admin_password }}' ${url}/api/v2/jobs/${job_id}/stdout?format=txt_download

 ip=`grep privateIPAddress job_${job_id}.txt  | grep -oE '\b([0-9]{1,3}\.){3}[0-9]{1,3}\b'`
 ips+=(${ip})
done

# create project templates
for (( i=1; i<=$NUMBER_OF_PARTICIPANTS; i++)); do
 tower-cli project create --name ensurecis$i --scm-type git --scm-clean true --scm-update-on-launch false --scm-url "https://github.com/dieterdm/ensure-cis-compliance.git" $credentials --organization org${i}
done

# create inventory
for (( i=1; i<=$NUMBER_OF_PARTICIPANTS; i++)); do
 tower-cli inventory create --name "vmforuser$i" --organization org${i} $credentials
 tower-cli inventory_source create --name azure_inventory --source azure_rm --credential azure_creds${i} --inventory vmforuser$i $credentials
 #tower-cli host create -n ${ips[$i-1]} --enabled true -u wsuser$i -p MyPassword$1 -i vmforuser$i  $credentials
done

# create credentials
for (( i=1; i<=$NUMBER_OF_PARTICIPANTS; i++)); do
 tower-cli credential create --name cred_for_vm${i} --organization org${i} --credential-type="Machine" --inputs="{username: wsuser$i, password: MyPassword$i, become_method: sudo, become_username: root, become_password: MyPassword$i}" $credentials
done

# create template
for (( i=1; i<=$NUMBER_OF_PARTICIPANTS; i++)); do
 # trim whitespaces
 ip=${ips[$i-1]}
 tower-cli job_template create --name "ensure-cis-compliant-vm$i" --job-type run -i vmforuser${i} --project ensurecis$i --playbook main.yml --credential=cred_for_vm$i --extra-vars="vm_name=${ip}" $credentials
done

# run job on each VM
for (( i=1; i<=$NUMBER_OF_PARTICIPANTS; i++)); do
 tower-cli job launch -J ensure-cis-compliant-vm$i $credentials
done


